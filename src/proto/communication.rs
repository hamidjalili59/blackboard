// This file is @generated by prost-build.
/// پیام اصلی که از کلاینت به سرور ارسال می‌شود.
/// از oneof برای اطمینان از ارسال تنها یکی از انواع پیام در هر بار استفاده می‌شود.
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct ClientToServer {
    #[prost(oneof = "client_to_server::Payload", tags = "1, 2")]
    pub payload: ::core::option::Option<client_to_server::Payload>,
}
/// Nested message and enum types in `ClientToServer`.
pub mod client_to_server {
    #[derive(Clone, PartialEq, Eq, Hash, ::prost::Oneof)]
    pub enum Payload {
        #[prost(message, tag = "1")]
        CanvasCommand(super::CanvasCommand),
        #[prost(message, tag = "2")]
        AudioChunk(super::AudioChunk),
    }
}
/// یک دستور نقاشی روی canvas را نمایش می‌دهد.
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct CanvasCommand {
    /// دستور نقاشی، برای مثال در قالب یک رشته JSON.
    #[prost(string, tag = "1")]
    pub command_json: ::prost::alloc::string::String,
    /// زمان ایجاد دستور به میلی‌ثانیه از مبدا یونیکس.
    #[prost(int64, tag = "2")]
    pub timestamp_ms: i64,
}
/// یک قطعه از داده صوتی را نمایش می‌دهد.
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct AudioChunk {
    /// داده خام صوتی.
    #[prost(bytes = "vec", tag = "1")]
    pub data: ::prost::alloc::vec::Vec<u8>,
    /// شماره ترتیب برای مرتب‌سازی قطعات صوتی.
    #[prost(int64, tag = "2")]
    pub sequence: i64,
}
